package com.db.wxpay.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WxPayDataExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public WxPayDataExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    protected WxPayDataExample(WxPayDataExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table wxpay
     *
     * @abatorgenerated Mon Oct 16 11:29:12 CST 2017
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("starttime is null");
            return this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("starttime is not null");
            return this;
        }

        public Criteria andStarttimeEqualTo(Long value) {
            addCriterion("starttime =", value, "starttime");
            return this;
        }

        public Criteria andStarttimeNotEqualTo(Long value) {
            addCriterion("starttime <>", value, "starttime");
            return this;
        }

        public Criteria andStarttimeGreaterThan(Long value) {
            addCriterion("starttime >", value, "starttime");
            return this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(Long value) {
            addCriterion("starttime >=", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLessThan(Long value) {
            addCriterion("starttime <", value, "starttime");
            return this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(Long value) {
            addCriterion("starttime <=", value, "starttime");
            return this;
        }

        public Criteria andStarttimeIn(List values) {
            addCriterion("starttime in", values, "starttime");
            return this;
        }

        public Criteria andStarttimeNotIn(List values) {
            addCriterion("starttime not in", values, "starttime");
            return this;
        }

        public Criteria andStarttimeBetween(Long value1, Long value2) {
            addCriterion("starttime between", value1, value2, "starttime");
            return this;
        }

        public Criteria andStarttimeNotBetween(Long value1, Long value2) {
            addCriterion("starttime not between", value1, value2, "starttime");
            return this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("endtime is null");
            return this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("endtime is not null");
            return this;
        }

        public Criteria andEndtimeEqualTo(Long value) {
            addCriterion("endtime =", value, "endtime");
            return this;
        }

        public Criteria andEndtimeNotEqualTo(Long value) {
            addCriterion("endtime <>", value, "endtime");
            return this;
        }

        public Criteria andEndtimeGreaterThan(Long value) {
            addCriterion("endtime >", value, "endtime");
            return this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(Long value) {
            addCriterion("endtime >=", value, "endtime");
            return this;
        }

        public Criteria andEndtimeLessThan(Long value) {
            addCriterion("endtime <", value, "endtime");
            return this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(Long value) {
            addCriterion("endtime <=", value, "endtime");
            return this;
        }

        public Criteria andEndtimeIn(List values) {
            addCriterion("endtime in", values, "endtime");
            return this;
        }

        public Criteria andEndtimeNotIn(List values) {
            addCriterion("endtime not in", values, "endtime");
            return this;
        }

        public Criteria andEndtimeBetween(Long value1, Long value2) {
            addCriterion("endtime between", value1, value2, "endtime");
            return this;
        }

        public Criteria andEndtimeNotBetween(Long value1, Long value2) {
            addCriterion("endtime not between", value1, value2, "endtime");
            return this;
        }

        public Criteria andAppidIsNull() {
            addCriterion("appid is null");
            return this;
        }

        public Criteria andAppidIsNotNull() {
            addCriterion("appid is not null");
            return this;
        }

        public Criteria andAppidEqualTo(String value) {
            addCriterion("appid =", value, "appid");
            return this;
        }

        public Criteria andAppidNotEqualTo(String value) {
            addCriterion("appid <>", value, "appid");
            return this;
        }

        public Criteria andAppidGreaterThan(String value) {
            addCriterion("appid >", value, "appid");
            return this;
        }

        public Criteria andAppidGreaterThanOrEqualTo(String value) {
            addCriterion("appid >=", value, "appid");
            return this;
        }

        public Criteria andAppidLessThan(String value) {
            addCriterion("appid <", value, "appid");
            return this;
        }

        public Criteria andAppidLessThanOrEqualTo(String value) {
            addCriterion("appid <=", value, "appid");
            return this;
        }

        public Criteria andAppidLike(String value) {
            addCriterion("appid like", value, "appid");
            return this;
        }

        public Criteria andAppidNotLike(String value) {
            addCriterion("appid not like", value, "appid");
            return this;
        }

        public Criteria andAppidIn(List values) {
            addCriterion("appid in", values, "appid");
            return this;
        }

        public Criteria andAppidNotIn(List values) {
            addCriterion("appid not in", values, "appid");
            return this;
        }

        public Criteria andAppidBetween(String value1, String value2) {
            addCriterion("appid between", value1, value2, "appid");
            return this;
        }

        public Criteria andAppidNotBetween(String value1, String value2) {
            addCriterion("appid not between", value1, value2, "appid");
            return this;
        }

        public Criteria andTotalfeeIsNull() {
            addCriterion("totalfee is null");
            return this;
        }

        public Criteria andTotalfeeIsNotNull() {
            addCriterion("totalfee is not null");
            return this;
        }

        public Criteria andTotalfeeEqualTo(Integer value) {
            addCriterion("totalfee =", value, "totalfee");
            return this;
        }

        public Criteria andTotalfeeNotEqualTo(Integer value) {
            addCriterion("totalfee <>", value, "totalfee");
            return this;
        }

        public Criteria andTotalfeeGreaterThan(Integer value) {
            addCriterion("totalfee >", value, "totalfee");
            return this;
        }

        public Criteria andTotalfeeGreaterThanOrEqualTo(Integer value) {
            addCriterion("totalfee >=", value, "totalfee");
            return this;
        }

        public Criteria andTotalfeeLessThan(Integer value) {
            addCriterion("totalfee <", value, "totalfee");
            return this;
        }

        public Criteria andTotalfeeLessThanOrEqualTo(Integer value) {
            addCriterion("totalfee <=", value, "totalfee");
            return this;
        }

        public Criteria andTotalfeeIn(List values) {
            addCriterion("totalfee in", values, "totalfee");
            return this;
        }

        public Criteria andTotalfeeNotIn(List values) {
            addCriterion("totalfee not in", values, "totalfee");
            return this;
        }

        public Criteria andTotalfeeBetween(Integer value1, Integer value2) {
            addCriterion("totalfee between", value1, value2, "totalfee");
            return this;
        }

        public Criteria andTotalfeeNotBetween(Integer value1, Integer value2) {
            addCriterion("totalfee not between", value1, value2, "totalfee");
            return this;
        }

        public Criteria andSignIsNull() {
            addCriterion("sign is null");
            return this;
        }

        public Criteria andSignIsNotNull() {
            addCriterion("sign is not null");
            return this;
        }

        public Criteria andSignEqualTo(String value) {
            addCriterion("sign =", value, "sign");
            return this;
        }

        public Criteria andSignNotEqualTo(String value) {
            addCriterion("sign <>", value, "sign");
            return this;
        }

        public Criteria andSignGreaterThan(String value) {
            addCriterion("sign >", value, "sign");
            return this;
        }

        public Criteria andSignGreaterThanOrEqualTo(String value) {
            addCriterion("sign >=", value, "sign");
            return this;
        }

        public Criteria andSignLessThan(String value) {
            addCriterion("sign <", value, "sign");
            return this;
        }

        public Criteria andSignLessThanOrEqualTo(String value) {
            addCriterion("sign <=", value, "sign");
            return this;
        }

        public Criteria andSignLike(String value) {
            addCriterion("sign like", value, "sign");
            return this;
        }

        public Criteria andSignNotLike(String value) {
            addCriterion("sign not like", value, "sign");
            return this;
        }

        public Criteria andSignIn(List values) {
            addCriterion("sign in", values, "sign");
            return this;
        }

        public Criteria andSignNotIn(List values) {
            addCriterion("sign not in", values, "sign");
            return this;
        }

        public Criteria andSignBetween(String value1, String value2) {
            addCriterion("sign between", value1, value2, "sign");
            return this;
        }

        public Criteria andSignNotBetween(String value1, String value2) {
            addCriterion("sign not between", value1, value2, "sign");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }

        public Criteria andBundleidIsNull() {
            addCriterion("bundleid is null");
            return this;
        }

        public Criteria andBundleidIsNotNull() {
            addCriterion("bundleid is not null");
            return this;
        }

        public Criteria andBundleidEqualTo(String value) {
            addCriterion("bundleid =", value, "bundleid");
            return this;
        }

        public Criteria andBundleidNotEqualTo(String value) {
            addCriterion("bundleid <>", value, "bundleid");
            return this;
        }

        public Criteria andBundleidGreaterThan(String value) {
            addCriterion("bundleid >", value, "bundleid");
            return this;
        }

        public Criteria andBundleidGreaterThanOrEqualTo(String value) {
            addCriterion("bundleid >=", value, "bundleid");
            return this;
        }

        public Criteria andBundleidLessThan(String value) {
            addCriterion("bundleid <", value, "bundleid");
            return this;
        }

        public Criteria andBundleidLessThanOrEqualTo(String value) {
            addCriterion("bundleid <=", value, "bundleid");
            return this;
        }

        public Criteria andBundleidLike(String value) {
            addCriterion("bundleid like", value, "bundleid");
            return this;
        }

        public Criteria andBundleidNotLike(String value) {
            addCriterion("bundleid not like", value, "bundleid");
            return this;
        }

        public Criteria andBundleidIn(List values) {
            addCriterion("bundleid in", values, "bundleid");
            return this;
        }

        public Criteria andBundleidNotIn(List values) {
            addCriterion("bundleid not in", values, "bundleid");
            return this;
        }

        public Criteria andBundleidBetween(String value1, String value2) {
            addCriterion("bundleid between", value1, value2, "bundleid");
            return this;
        }

        public Criteria andBundleidNotBetween(String value1, String value2) {
            addCriterion("bundleid not between", value1, value2, "bundleid");
            return this;
        }
    }
}